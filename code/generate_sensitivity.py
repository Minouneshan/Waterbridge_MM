"""Generate a simple sensitivity-analysis LaTeX table.

We perturb each forecast node by a ±0.10 evidence weight and capture the
resulting change in that forecast's probability after network propagation.
The output is written to docs/sensitivity_appendix.tex and included in the
LaTeX report via \input.
"""
from __future__ import annotations

from pathlib import Path
from copy import deepcopy
import numpy as np
import pandas as pd

from bayesian_model import create_comprehensive_model

ROOT_DIR = Path(__file__).resolve().parents[1]
OUTPUT_PATH = ROOT_DIR / "docs" / "sensitivity_appendix.tex"


def compute_sensitivity():
    base_model = create_comprehensive_model()
    baseline_probs = {fid: node["current_prob"] for fid, node in base_model.forecasts.items()}

    rows = []
    for fid in baseline_probs:
        # Positive perturbation
        model_plus = deepcopy(base_model)
        model_plus.update_with_evidence(fid, +0.10)
        p_plus = model_plus.forecasts[fid]["current_prob"]

        # Negative perturbation
        model_minus = deepcopy(base_model)
        model_minus.update_with_evidence(fid, -0.10)
        p_minus = model_minus.forecasts[fid]["current_prob"]

        delta = (p_plus - p_minus) / 2.0  # average absolute sensitivity
        rows.append((fid, baseline_probs[fid], delta))

    # Sort by descending sensitivity
    rows.sort(key=lambda x: x[2], reverse=True)
    df = pd.DataFrame(rows, columns=["ID", "Baseline", "Sensitivity"])
    return df


def write_latex_table(df: pd.DataFrame, path: Path) -> None:
    path.parent.mkdir(parents=True, exist_ok=True)

    with path.open("w", encoding="utf-8") as f:
        f.write("% Auto-generated by code/generate_sensitivity.py\n")
        f.write("% Do not edit manually – run `make sensitivity` instead.\n\n")
        f.write("\\begin{longtable}{@{}lcc@{}}\\toprule\n")
        f.write("Forecast ID & Baseline Prob. & |ΔP| (±0.10 evidence) \\\\ \\\midrule\n")
        for _, row in df.iterrows():
            f.write(f"{row['ID']} & {row['Baseline']:.2f} & {row['Sensitivity']:.2f} \\\\ \n")
        f.write("\\bottomrule\n\\end{longtable}\n")


def main():
    df = compute_sensitivity()
    write_latex_table(df, OUTPUT_PATH)
    print(f"Sensitivity appendix written to {OUTPUT_PATH.relative_to(ROOT_DIR)}")


if __name__ == "__main__":
    main()
